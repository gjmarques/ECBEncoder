#-----------------------------------------------------------
# Vivado v2019.2 (64-bit)
# SW Build 2708876 on Wed Nov  6 21:40:23 MST 2019
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
# Start of session at: Tue Jun  9 16:29:54 2020
# Process ID: 7860
# Current directory: C:/CR/ECBEncoder/project_1
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent4188 C:\CR\ECBEncoder\project_1\project_1.xpr
# Log file: C:/CR/ECBEncoder/project_1/vivado.log
# Journal file: C:/CR/ECBEncoder/project_1\vivado.jou
#-----------------------------------------------------------
start_gui
open_project C:/CR/ECBEncoder/project_1/project_1.xpr
update_compile_order -fileset sources_1
open_bd_design {C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd}
set_property location {8 2311 679} [get_bd_cells microblaze_0_axi_periph]
undo
startgroup
set_property -dict [list CONFIG.C_NO_CLOCKS {125000}] [get_bd_cells fit_timer_0]
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_emc:3.0 axi_emc_0
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {cellular_ram ( Block RAM ) } Manual_Source {Auto}}  [get_bd_intf_pins axi_emc_0/EMC_INTF]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {Auto} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_0 (Periph)} Slave {/axi_emc_0/S_AXI_MEM} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins axi_emc_0/S_AXI_MEM]
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:clkrst -config { Clk {/clk_wiz_1/clk_out1 (100 MHz)} Freq {100} Ref_Clk0 {} Ref_Clk1 {} Ref_Clk2 {}}  [get_bd_pins axi_emc_0/rdclk]
regenerate_bd_layout
set_property range 16M [get_bd_addr_segs {microblaze_0/Data/SEG_axi_emc_0_Mem0}]
delete_bd_objs [get_bd_intf_nets microblaze_0_dlmb_1] [get_bd_intf_nets microblaze_0_ilmb_1] [get_bd_nets rst_clk_wiz_1_100M_bus_struct_reset] [get_bd_cells microblaze_0_local_memory]
delete_bd_objs [get_bd_intf_nets microblaze_0_interrupt] [get_bd_intf_nets microblaze_0_axi_dp] [get_bd_intf_nets microblaze_0_debug] [get_bd_cells microblaze_0]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:microblaze -config { axi_intc {1} axi_periph {Enabled} cache {8KB} clk {/clk_wiz_1/clk_out1 (100 MHz)} debug_module {Debug Only} ecc {None} local_mem {128KB} preset {Real-time}}  [get_bd_cells microblaze_0]
regenerate_bd_layout
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {/clk_wiz_1/clk_out1 (100 MHz)} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_0/M_AXI_DC} Slave {/axi_emc_0/S_AXI_MEM} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins microblaze_0/M_AXI_DC]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {/clk_wiz_1/clk_out1 (100 MHz)} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_0/M_AXI_IC} Slave {/axi_emc_0/S_AXI_MEM} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins microblaze_0/M_AXI_IC]
endgroup
regenerate_bd_layout
regenerate_bd_layout
set_property range 16M [get_bd_addr_segs {microblaze_0/Data/SEG_axi_emc_0_Mem0}]
set_property range 16M [get_bd_addr_segs {microblaze_0/Instruction/SEG_axi_emc_0_Mem0}]
generate_target all [get_files  C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd]
catch { config_ip_cache -export [get_ips -all mb_design_xbar_0] }
catch { config_ip_cache -export [get_ips -all mb_design_microblaze_0_axi_intc_0] }
catch { config_ip_cache -export [get_ips -all mb_design_mdm_1_0] }
catch { config_ip_cache -export [get_ips -all mb_design_clk_wiz_1_0] }
catch { config_ip_cache -export [get_ips -all mb_design_rst_clk_wiz_1_100M_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_gpio_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_gpio_1_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_gpio_2_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_gpio_3_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_uartlite_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_timer_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_fit_timer_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_7] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_1] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_2] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_3] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_4] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_5] }
catch { config_ip_cache -export [get_ips -all mb_design_auto_pc_6] }
catch { config_ip_cache -export [get_ips -all mb_design_axi_emc_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_microblaze_0_1] }
catch { config_ip_cache -export [get_ips -all mb_design_dlmb_v10_1] }
catch { config_ip_cache -export [get_ips -all mb_design_ilmb_v10_1] }
catch { config_ip_cache -export [get_ips -all mb_design_dlmb_bram_if_cntlr_1] }
catch { config_ip_cache -export [get_ips -all mb_design_ilmb_bram_if_cntlr_1] }
catch { config_ip_cache -export [get_ips -all mb_design_lmb_bram_1] }
export_ip_user_files -of_objects [get_files C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd]
launch_runs -jobs 6 {mb_design_xbar_0_synth_1 mb_design_microblaze_0_axi_intc_0_synth_1 mb_design_mdm_1_0_synth_1 mb_design_clk_wiz_1_0_synth_1 mb_design_rst_clk_wiz_1_100M_0_synth_1 mb_design_axi_gpio_0_0_synth_1 mb_design_axi_gpio_1_0_synth_1 mb_design_axi_gpio_2_0_synth_1 mb_design_axi_gpio_3_0_synth_1 mb_design_axi_uartlite_0_0_synth_1 mb_design_axi_timer_0_0_synth_1 mb_design_fit_timer_0_0_synth_1 mb_design_auto_pc_7_synth_1 mb_design_auto_pc_0_synth_1 mb_design_auto_pc_1_synth_1 mb_design_auto_pc_2_synth_1 mb_design_auto_pc_3_synth_1 mb_design_auto_pc_4_synth_1 mb_design_auto_pc_5_synth_1 mb_design_auto_pc_6_synth_1 mb_design_axi_emc_0_0_synth_1 mb_design_microblaze_0_1_synth_1 mb_design_dlmb_v10_1_synth_1 mb_design_ilmb_v10_1_synth_1 mb_design_dlmb_bram_if_cntlr_1_synth_1 mb_design_ilmb_bram_if_cntlr_1_synth_1 mb_design_lmb_bram_1_synth_1}
export_simulation -of_objects [get_files C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd] -directory C:/CR/ECBEncoder/project_1/project_1.ip_user_files/sim_scripts -ip_user_files_dir C:/CR/ECBEncoder/project_1/project_1.ip_user_files -ipstatic_source_dir C:/CR/ECBEncoder/project_1/project_1.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/CR/ECBEncoder/project_1/project_1.cache/compile_simlib/modelsim} {questa=C:/CR/ECBEncoder/project_1/project_1.cache/compile_simlib/questa} {riviera=C:/CR/ECBEncoder/project_1/project_1.cache/compile_simlib/riviera} {activehdl=C:/CR/ECBEncoder/project_1/project_1.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
make_wrapper -files [get_files C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/mb_design.bd] -top
add_files -norecurse C:/CR/ECBEncoder/project_1/project_1.srcs/sources_1/bd/mb_design/hdl/mb_design_wrapper.v
open_hw_manager
launch_runs impl_1 -to_step write_bitstream -jobs 6
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
write_hw_platform -fixed -force  -include_bit -file C:/CR/ECBEncoder/project_1/mb_design_wrapper.xsa
