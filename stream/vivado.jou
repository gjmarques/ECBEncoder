#-----------------------------------------------------------
# Vivado v2019.2 (64-bit)
# SW Build 2708876 on Wed Nov  6 21:40:23 MST 2019
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
# Start of session at: Wed Jul  8 22:54:33 2020
# Process ID: 1372
# Current directory: D:/Files/ECBEncoder/ECBEncoder/stream
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent6896 D:\Files\ECBEncoder\ECBEncoder\stream\stream.xpr
# Log file: D:/Files/ECBEncoder/ECBEncoder/stream/vivado.log
# Journal file: D:/Files/ECBEncoder/ECBEncoder/stream\vivado.jou
#-----------------------------------------------------------
start_gui
open_project D:/Files/ECBEncoder/ECBEncoder/stream/stream.xpr
update_compile_order -fileset sources_1
open_bd_design {D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd}
startgroup
set_property -dict [list CONFIG.C_FSL_LINKS {1}] [get_bd_cells microblaze_0]
endgroup
create_peripheral xilinx.com user CustomECBEncoder 1.0 -dir D:/Files/ECBEncoder/ECBEncoder/stream/../ip_repo
add_peripheral_interface S00_AXIS -interface_mode slave -axi_type stream [ipx::find_open_core xilinx.com:user:CustomECBEncoder:1.0]
add_peripheral_interface M00_AXIS -interface_mode master -axi_type stream [ipx::find_open_core xilinx.com:user:CustomECBEncoder:1.0]
generate_peripheral [ipx::find_open_core xilinx.com:user:CustomECBEncoder:1.0]
write_peripheral [ipx::find_open_core xilinx.com:user:CustomECBEncoder:1.0]
set_property  ip_repo_paths  {D:/Files/ECBEncoder/ECBEncoder/stream/../ip_repo/CustomECBEncoder_1.0 D:/Files/ECBEncoder/ECBEncoder/ip_repo/CustomECBEncoder_1.0} [current_project]
update_ip_catalog -rebuild
startgroup
create_bd_cell -type ip -vlnv xilinx.com:user:CustomECBEncoder:1.0 CustomECBEncoder_0
endgroup
set_property location {6 1738 905} [get_bd_cells CustomECBEncoder_0]
ipx::edit_ip_in_project -upgrade true -name CustomECBEncoder_v1_0_project -directory D:/Files/ECBEncoder/ECBEncoder/stream/stream.tmp/CustomECBEncoder_v1_0_project d:/Files/ECBEncoder/ECBEncoder/ip_repo/CustomECBEncoder_1.0/component.xml
update_compile_order -fileset sources_1
ipx::unload_core d:/Files/ECBEncoder/ECBEncoder/ip_repo/CustomECBEncoder_1.0/component.xml
import_files -norecurse D:/Files/ECBEncoder/ECBEncoder/sim/simECBEncoder/simECBEncoder.srcs/sources_1/new/ECBEncoder.vhd
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
ipx::open_ipxact_file d:/Files/ECBEncoder/ECBEncoder/ip_repo/CustomECBEncoder_1.0/component.xml
ipx::merge_project_changes hdl_parameters [ipx::current_core]
launch_runs synth_1 -jobs 8
wait_on_run synth_1
reset_run synth_1
launch_runs synth_1 -jobs 8
wait_on_run synth_1
reset_run synth_1
launch_runs synth_1 -jobs 8
wait_on_run synth_1
reset_run synth_1
launch_runs synth_1 -jobs 8
wait_on_run synth_1
ipx::merge_project_changes hdl_parameters [ipx::current_core]
ipx::merge_project_changes files [ipx::current_core]
set_property core_revision 2 [ipx::current_core]
ipx::create_xgui_files [ipx::current_core]
ipx::update_checksums [ipx::current_core]
ipx::save_core [ipx::current_core]
update_ip_catalog -rebuild -repo_path d:/Files/ECBEncoder/ECBEncoder/ip_repo/CustomECBEncoder_1.0
close_project
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip [get_ips  mb_design_CustomECBEncoder_0_0] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips mb_design_CustomECBEncoder_0_0] -no_script -sync -force -quiet
generate_target all [get_files  D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd]
connect_bd_intf_net [get_bd_intf_pins CustomECBEncoder_0/S00_AXIS] [get_bd_intf_pins microblaze_0/M0_AXIS]
delete_bd_objs [get_bd_intf_nets microblaze_0_M0_AXIS]
connect_bd_intf_net [get_bd_intf_pins microblaze_0/M0_AXIS] [get_bd_intf_pins CustomECBEncoder_0/S00_AXIS]
connect_bd_intf_net [get_bd_intf_pins CustomECBEncoder_0/M00_AXIS] [get_bd_intf_pins microblaze_0/S0_AXIS]
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:clkrst -config { Clk {/clk_wiz_1/clk_out1 (100 MHz)} Freq {100} Ref_Clk0 {} Ref_Clk1 {} Ref_Clk2 {}}  [get_bd_pins CustomECBEncoder_0/m00_axis_aclk]
apply_bd_automation -rule xilinx.com:bd_rule:clkrst -config { Clk {/clk_wiz_1/clk_out1 (100 MHz)} Freq {100} Ref_Clk0 {} Ref_Clk1 {} Ref_Clk2 {}}  [get_bd_pins CustomECBEncoder_0/s00_axis_aclk]
endgroup
report_ip_status -name ip_status 
save_bd_design
make_wrapper -files [get_files D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd] -top
add_files -norecurse D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/hdl/mb_design_wrapper.vhd
generate_target all [get_files  D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd]
catch { config_ip_cache -export [get_ips -all mb_design_microblaze_0_0] }
catch { config_ip_cache -export [get_ips -all mb_design_CustomECBEncoder_0_0] }
export_ip_user_files -of_objects [get_files D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd]
launch_runs -jobs 8 {mb_design_microblaze_0_0_synth_1 mb_design_CustomECBEncoder_0_0_synth_1}
export_simulation -of_objects [get_files D:/Files/ECBEncoder/ECBEncoder/stream/stream.srcs/sources_1/bd/mb_design/mb_design.bd] -directory D:/Files/ECBEncoder/ECBEncoder/stream/stream.ip_user_files/sim_scripts -ip_user_files_dir D:/Files/ECBEncoder/ECBEncoder/stream/stream.ip_user_files -ipstatic_source_dir D:/Files/ECBEncoder/ECBEncoder/stream/stream.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/Files/ECBEncoder/ECBEncoder/stream/stream.cache/compile_simlib/modelsim} {questa=D:/Files/ECBEncoder/ECBEncoder/stream/stream.cache/compile_simlib/questa} {riviera=D:/Files/ECBEncoder/ECBEncoder/stream/stream.cache/compile_simlib/riviera} {activehdl=D:/Files/ECBEncoder/ECBEncoder/stream/stream.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
launch_runs impl_1 -to_step write_bitstream -jobs 8
wait_on_run impl_1
write_hw_platform -fixed -force  -include_bit -file D:/Files/ECBEncoder/ECBEncoder/stream/mb_design_wrapper.xsa
set_property range 128K [get_bd_addr_segs {microblaze_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property range 128K [get_bd_addr_segs {microblaze_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_gpio_buttons_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_gpio_display_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_gpio_leds_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_gpio_switches_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_timer_0_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_axi_uartlite_0_Reg}]
set_property range 8K [get_bd_addr_segs {microblaze_0/Data/SEG_microblaze_0_axi_intc_Reg}]
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 12
wait_on_run impl_1
write_hw_platform -fixed -force  -include_bit -file D:/Files/ECBEncoder/ECBEncoder/stream/mb_design_wrapper.xsa
